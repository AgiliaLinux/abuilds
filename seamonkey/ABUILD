#ABUILD created by: SirAnthony, anthony at adsorbtion.org

# Package metadata
pkgname=seamonkey
pkgver=2.15
pkgbuild=1
arch=("auto")
build_deps=('pkg-config python yasm mesa autoconf nss nspr sqlite')

shortdesc=('open-source web browser suite')
longdesc=("The SeaMonkey browser suite.  SeaMonkey features a state-of-the-art web browser and powerful email client, as well as a WYSIWYG web page composer and a feature-rich IRC chat client."
"Visit the SeaMonkey project at this URL:  http://www.mozilla.org/projects/seamonkey/")

source=("http://releases.mozilla.org/pub/mozilla.org/seamonkey/releases/${pkgver}/source/${pkgname}-${pkgver}.source.tar.bz2")
tags=("xapps www-client")

docs="LEGAL"

BUILD_SYSTEM="autotools"
LDFLAGS="$LDFLAGS -Wl,-rpath,/usr/lib/seamonkey-$pkgver"
#MAKE_WORD="make -j$numjobs -f client.mk build"
BUILD_KEYS="--prefix=/usr \
    --enable-optimize=-O2 \
    --disable-debug \
    --with-default-mozilla-five-home=/usr/lib${LIBDIRSUFFIX}/seamonkey-${VERSION} \
    --enable-shared-js \
    --enable-strip \
    --disable-tests \
    --enable-svg \
    --enable-canvas \
    --disable-short-wchar \
    --enable-extensions=default \
    --enable-crypto \
    --disable-xprint \
    --with-system-nss \
    --with-system-nspr \
    --with-system-zlib \
    --with-system-jpeg \
    --with-system-bz2 \
    --with-system-mng \
    --enable-application=suite \
    --enable-xft \
    --disable-necko-wifi \
    --enable-storage \
    --enable-system-sqlite \
    --host=$ARCH-slackware-linux \
    --target=$ARCH-slackware-linux \
    --libdir=/usr/lib$LIBDIRSUFFIX"

before_build() {
    go_src_dir
    # Fix a long standing bug that's prevented staying current on GTK+.
    # Thanks to the BLFS folks.  :-)
    cat >> mozilla/layout/build/Makefile.in << EOF

ifdef MOZ_ENABLE_CANVAS
EXTRA_DSO_LDOPTS += \$(XLDFLAGS) -lX11 -lXrender
endif

EOF

}

after_build() {
    go_src_dir
    #Install js/nspr/nss headers.
#    for includedir in nspr nspr/obsolete nspr/private ; do
#	mkdir -p ${pkgdir}/usr/include/seamonkey-${pkgver}/$includedir
#	cp mozilla/dist/include/${includedir}/*.h ${pkgdir}/usr/include/seamonkey-${pkgver}/$includedir
#    done
    mkdir -p ${pkgdir}/usr/include/seamonkey-${pkgver}/js
    cp mozilla/js/src/*.tbl ${pkgdir}/usr/include/seamonkey-${pkgver}/js
    cp mozilla/js/src/*.h ${pkgdir}/usr/include/seamonkey-${pkgver}/js
    cp -L mozilla/dist/include/*.h ${pkgdir}/usr/include/seamonkey-${pkgver}
    #cp -aL mozilla/dist/sdk/include/* ${pkgdir}/usr/include/seamonkey-${pkgver}
    #( cd ${pkgdir}/usr/include/seamonkey-${pkgver}/plugin
    #  for file in ../j*.h ; do
    #    ln -sf $file .
    #  done
    #)
    cp mozilla/js/src/libmozjs.so ${pkgdir}/usr/lib${LIBDIRSUFFIX}/seamonkey-${pkgver}/
    chown -R root:root ${pkgdir}/usr/include/seamonkey-${pkgver}
    find ${pkgdir}/usr/include/seamonkey-${pkgver} -name "*.h" -type f -exec chmod 644 {} \;
    # Create a more generic include files symlink:
    ( cd ${pkgdir}/usr/include
	if [ ! -e seamonkey ]; then
	    ln -sf seamonkey-${pkgver} seamonkey
	fi
    )

    # Install pkgconfig files:
    mkdir -p ${pkgdir}/usr/lib${LIBDIRSUFFIX}/pkgconfig
    for file in ${startdir}/files/pkgconfig/* ; do
        cat $file \
    	    | sed -e "s/@LIB@/lib${LIBDIRSUFFIX}/" \
            -e "s/@VERSION@/$pkgver/" \
            > ${pkgdir}/usr/lib${LIBDIRSUFFIX}/pkgconfig/$(basename $file)
    done

    # Add symlinks for the pkgconfig files:
    ( cd ${pkgdir}/usr/lib${LIBDIRSUFFIX}/pkgconfig
	ln -s seamonkey-js.pc js.pc
	#ln -s seamonkey-nspr.pc nspr.pc
	#ln -s seamonkey-nss.pc nss.pc
	ln -s seamonkey-plugin.pc plugin.pc
	ln -s seamonkey-xpcom.pc xpcom.pc
    )

    # This remains the standard plugin directory for all browsers.
    mkdir -p ${pkgdir}/usr/lib${LIBDIRSUFFIX}/mozilla/plugins

    # This is traditional.
    #( cd ${pkgdir}/usr/lib${LIBDIRSUFFIX}
	#if [ ! -e seamonkey ]; then
	#    ln -sf seamonkey-${pkgver} seamonkey
	#fi
    #)

    mkdir -p ${pkgdir}/usr/share/applications
    cp -a ${startdir}/files/*.desktop ${pkgdir}/usr/share/applications

    mkdir -p ${pkgdir}/usr/share/pixmaps
    cp -a ${startdir}/files/*.png ${pkgdir}/usr/share/pixmaps

    zcat ${startdir}/doinst.sh.gz | sed -e "s#usr/lib#usr/lib${LIBDIRSUFFIX}#g" \
     > ${pkgdir}/install/doinst.sh

    # Install russian langpack
    (cd ${pkgdir}/usr/lib/seamonkey-${pkgver}/distribution/extensions/
      wget -c http://releases.mozilla.org/pub/mozilla.org/${pkgname}/releases/${pkgver}/langpack/${pkgname}-${pkgver}.ru.langpack.xpi
    #  chmod +x ${filedir}/mozilla-add-global-extension.sh
    #  ${filedir}/mozilla-add-global-extension.sh \
    #    -p ${pkgdir}/usr/lib/${pkgname}-${pkgver}/extensions/ \
    #    -f ./${pkgname}-${pkgver}.ru.langpack.xpi || exit
    )
    #rm -rf xpilang

    # Install russian dictonaries & locale
    ( cd ${pkgdir}/usr/lib/seamonkey-${pkgver}/
        cp ${filedir}/ru.{aff,dic} ./dictionaries/
        echo 'ru' > update.locale
    )

    #( cd ${pkgdir}/usr/lib/${pkgname}-${pkgver}/defaults/pref/
    #    sed -i -e 's|en-US|ru|;tc;b;:c;n;bc;' ./suite-l10n.js
    #)
}
