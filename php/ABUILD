# ABUILD generated by mkpkg_generator.sh

pkgname=php
pkgver=5.5.3
pkgbuild=1
arch=('auto')

shortdesc=('php (HTML-embedded scripting language)')
longdesc=('PHP is an HTML-embedded scripting language. It shares syntax characteristics with C, Java, and Perl. The primary objective behind this language is to make a fast and easy-to-use scripting language for dynamic web sites. More information can be found online at http://www.php.net/')

tags=('server dev-lang')
gendeps_blacklist='usr/lib'${LIBDIRSUFFIX}'/php/extensions*'

config_files="etc/httpd/php.ini
etc/httpd/mod_php.conf"

source=("http://www.php.net/distributions/${pkgname}-${pkgver}.tar.bz2")
build_deps=("aspell bzip2 curl db e2fsprogs file freetype gdbm glibc-solibs gmp httpd krb5 icu4c libjpeg libmcrypt \
  libpng libtool libX11 libxml2 libXpm libxslt libvpx mm mysql net-snmp openldap openssl-solibs pcre postgresql \
  postfix sqlite t1lib")

pkglist="cgi apache fpm embed pear gd intl ldap mcrypt mysql pgsql pspell snmp sqlite xsl"

docs="CODING_STANDARDS CREDITS EXTENSIONS INSTALL TODO*"

# Generic "kitchen sink" configure function, with as many things as possible (and
# maybe then some ;-) compiled as shared extensions:
php_configure() {
	EXTENSION_DIR=/usr/lib${LIBDIRSUFFIX}/php/extensions \
	CFLAGS="$SLKCFLAGS" \
	./configure \
		--srcdir=../${pkgname}-${pkgver} \
		--prefix=/usr \
		--libdir=/usr/lib${LIBDIRSUFFIX} \
		--with-libdir=lib${LIBDIRSUFFIX} \
		--sysconfdir=/etc \
		--localstatedir=/var \
		--with-layout=PHP \
		--with-config-file-path=/etc/httpd \
		--with-config-file-scan-dir=/etc/php \
		--disable-rpath \
		--mandir=/usr/man \
		--without-pear \
		--disable-debug \
		--enable-bcmath=shared \
		--enable-calendar=shared \
		--enable-ctype=shared \
		--enable-dba=shared \
		--enable-exif=shared \
		--enable-ftp=shared \
		--enable-filter \
		--enable-gd-native-ttf \
		--enable-gd-jis-conv \
		--enable-hash \
		--enable-intl=shared \
		--enable-libxml \
		--enable-mbregex \
		--enable-mbstring \
		--enable-mod_charset \
		--enable-opcache \
		--enable-pdo=shared \
		--enable-phar=shared \
		--enable-posix=shared \
		--enable-shmop=shared \
		--enable-shared=yes \
		--enable-sigchild \
		--enable-simplexml \
		--enable-soap=shared \
		--enable-sockets=shared \
		--enable-static=no \
		--enable-sysvmsg=shared \
		--enable-sysvsem=shared \
		--enable-sysvshm=shared \
		--enable-tokenizer=shared \
		--enable-wddx=shared \
		--enable-xml \
		--enable-xmlreader=shared \
		--enable-xmlwriter=shared \
		--enable-zip=shared \
		--with-bz2=shared \
		--with-curl=shared \
		--with-freetype-dir=/usr \
		--with-gd=shared \
		--with-gdbm \
		--with-gettext=shared \
		--with-gmp=shared \
		--with-gnu-ld \
		--with-iconv=shared \
		--with-icu-dir=/usr \
		--with-jpeg-dir=/usr \
		--with-kerberos \
		--with-vpx-dir=/usr \
		--with-ldap=shared \
		--with-ldap-sasl \
		--with-libxml-dir=/usr \
		--with-mcrypt=shared \
		--with-mhash \
		--with-mm=/usr \
		--with-mysql=shared,mysqlnd \
		--with-mysqli=shared,/usr/bin/mysql_config \
		--with-openssl=shared \
		--with-pcre-regex=/usr \
		--with-pdo-mysql=shared,/usr \
		--with-pdo-pgsql=shared \
		--with-pdo-sqlite=shared,/usr \
		--with-pgsql=shared \
		--with-pic \
		--with-png-dir=/usr \
		--with-pspell=shared \
		--with-regex=php \
		--with-snmp=shared \
		--with-sqlite3=shared,/usr \
		--with-t1lib=/usr \
		--with-tsrm-pthreads \
		--with-xmlrpc=shared \
		--with-xpm-dir=/usr \
		--with-xsl=shared \
		--with-zlib=shared,/usr \
		--with-zlib-dir=/usr \
		$*
}

build_folder() {
	name=$1
	shift
	cp -a ${srcdir}/build-php ${srcdir}/build-$name
	cd ${srcdir}/build-$name
	php_configure $*
	make -j${numjobs}
}

build() {
	go_src_dir
	burn_patches
	set -e

	mkdir -p $pkgdir/etc/httpd
	mkdir -p $pkgdir/etc/php
	# A trick from DaMouse to enable building php into $PKG.
	# We'll remove this later on.
	cat /etc/httpd/original/httpd.conf > ${pkgdir}/etc/httpd/httpd.conf
	if [ ! -e /etc/httpd/original/httpd.conf ]; then
		echo "FATAL:  no /etc/httpd/original/httpd.conf found."
		exit 1
	fi

	# php
	mkdir ${srcdir}/build-php
	cd ${srcdir}/build-php
	ln -s ../${pkgname}-${pkgver}/configure
	php_configure \
		--disable-cgi \
		--with-readline \
		--enable-pcntl
	make -j${numjobs}

	# cgi and fcgi
	# reuse the previous run; this will save us a lot of time
	build_folder cgi --disable-cli \
		--enable-cgi \
		--enable-sigchild

	# apache
	build_folder apache --disable-cli --with-apxs2

	# fpm
	build_folder fpm \
		--disable-cli \
		--enable-fpm \
		--with-fpm-user=http \
		--with-fpm-group=http

	# embed
	build_folder embed \
		--disable-cli \
		--enable-embed=shared

	# pear
	build_folder pear \
		--disable-cgi \
		--with-readline \
		--enable-pcntl \
		--with-pear
}

after_build() {
	cd ${srcdir}/build-php
	make -j1 INSTALL_ROOT=${pkgdir} EXTENSION_DIR=/usr/lib/php/modules install
	install -d -m755 ${pkgdir}/usr/share/pear

	cd ${srcdir}/${pkgname}-${pkgver}
	# Patch ini files:
	cat ${filedir}/php.ini-development.diff \
		| sed -e "s#usr/lib/php#usr/lib${LIBDIRSUFFIX}/php#" \
		| patch -p0 --verbose --backup --suffix=.orig || exit 1
	cat ${filedir}/php.ini-production.diff \
		| sed -e "s#usr/lib/php#usr/lib${LIBDIRSUFFIX}/php#" \
		| patch -p0 --verbose --backup --suffix=.orig || exit 1

	mkdir -p $pkgdir/etc/httpd
	cp -a php.ini-{development,production} $pkgdir/etc/httpd
	cp ${pkgdir}/etc/httpd/php.ini-production ${pkgdir}/etc/httpd/php.ini
	cat $filedir/mod_php.conf.example | sed -e "s#lib/httpd#lib${LIBDIRSUFFIX}/httpd#" \
		> $pkgdir/etc/httpd/mod_php.conf.example
	cp ${pkgdir}/etc/httpd/mod_php.conf.example ${pkgdir}/etc/httpd/mod_php.conf

	# This can go now.
	rm -f $pkgdir/etc/httpd/httpd*
	rm -rf $pkgdir/usr/share/pear

	# remove static modules
	rm -f ${pkgdir}/usr/lib${LIBDIRSUFFIX}/php/modules/*.a
	# remove modules provided by sub packages
	rm -f ${pkgdir}/usr/lib${LIBDIRSUFFIX}/php/modules/{gd,intl,ldap,mcrypt,mysql,mysqli,pdo_mysql,pgsql,pdo_pgsql,pspell,snmp,sqlite3,pdo_sqlite,xsl}.so
	# remove empty directory
	rmdir ${pkgdir}/usr/include/php/include
}

cgi() {
	pkgname="php-cgi"
	shortdesc='CGI and FCGI SAPI for PHP'
	adddeps="php"
	docs="sapi/cgi/README.FastCGI"
}

cgi_prep() {
	install -D -m755 ${srcdir}/build-cgi/sapi/cgi/php-cgi ${pkgdir}/usr/bin/php-cgi
}

apache() {
	pkgname="php-apache"
	shortdesc='Apache SAPI for PHP'
	adddeps=('php' 'httpd')
}

apache_prep() {
	install -D -m755 ${srcdir}/build-apache/libs/libphp5.so ${pkgdir}/usr/lib${LIBDIRSUFFIX}/httpd/modules/libphp5.so
	install -D -m644 ${filedir}/mod_php.conf.example ${pkgdir}/etc/httpd/conf/extra/php5_module.conf
	# Session directory for PHP:
	mkdir -p $pkgdir/var/lib/php
	chmod 770 $pkgdir/var/lib/php
	chown root:apache $pkgdir/var/lib/php
}

fpm() {
	pkgname="php-fpm"
	shortdesc='FastCGI Process Manager for PHP'
	adddeps="php"
}

fpm_prep() {
	install -D -m755 ${srcdir}/build-fpm/sapi/fpm/php-fpm ${pkgdir}/usr/bin/php-fpm
	install -D -m644 ${srcdir}/build-fpm/sapi/fpm/php-fpm.8 ${pkgdir}/usr/man/man8/php-fpm.8
	install -D -m644 ${srcdir}/build-fpm/sapi/fpm/php-fpm.conf ${pkgdir}/etc/php/php-fpm.conf
	install -d -m755 ${pkgdir}/etc/php/fpm.d
}

embed() {
	pkgname="php-embed"
	shortdesc='Embed SAPI for PHP'
	adddeps="php"
}

embed_prep() {
	install -D -m755 ${srcdir}/build-embed/libs/libphp5.so ${pkgdir}/usr/lib${LIBDIRSUFFIX}/libphp5.so
	install -D -m644 ${srcdir}/${p_pkgname}-${pkgver}/sapi/embed/php_embed.h ${pkgdir}/usr/include/php/sapi/embed/php_embed.h
}

pear() {
	pkgname="php-pear"
	shortdesc='PHP Extension and Application Repository'
	adddeps="php"
}

pear_prep() {
	cd ${srcdir}/build-pear
	make install-pear INSTALL_ROOT=${pkgdir} PEAR_INSTALLDIR=/usr/share/pear
	rm -rf ${pkgdir}{,/usr/share/pear}/.{channels,depdb,depdblock,filemap,lock,registry}
}

gd() {
	pkgname="php-gd"
	adddeps="php"
	shortdesc='gd module for PHP'
}

gd_prep() {
	install -D -m755 ${srcdir}/build-php/modules/gd.so ${pkgdir}/usr/lib${LIBDIRSUFFIX}/php/modules/gd.so
}

intl() {
	pkgname="php-intl"
	adddep="php"
	shortdesc='intl module for PHP'
}

intl_prep() {
	install -D -m755 ${srcdir}/build-php/modules/intl.so ${pkgdir}/usr/lib${LIBDIRSUFFIX}/php/modules/intl.so
}

ldap() {
	pkgname="php-ldap"
	adddeps="php"
	shortdesc='ldap module for PHP'
}

ldap_prep() {
	install -D -m755 ${srcdir}/build-php/modules/ldap.so ${pkgdir}/usr/lib${LIBDIRSUFFIX}/php/modules/ldap.so
}

mcrypt() {
	pkgname="php-mcrypt"
	adddeps="php"
	shortdesc='mcrypt module for PHP'
}

mcrypt_prep() {
	install -D -m755 ${srcdir}/build-php/modules/mcrypt.so ${pkgdir}/usr/lib${LIBDIRSUFFIX}/php/modules/mcrypt.so
}

mysql() {
	pkgname="php-mysql"
	adddeps="php"
	shortdesc="mysql modules for PHP"
}

mysql_prep() {
	install -D -m755 ${srcdir}/build-php/modules/mysql.so ${pkgdir}/usr/lib${LIBDIRSUFFIX}/php/modules/mysql.so
	install -D -m755 ${srcdir}/build-php/modules/mysqli.so ${pkgdir}/usr/lib${LIBDIRSUFFIX}/php/modules/mysqli.so
	install -D -m755 ${srcdir}/build-php/modules/pdo_mysql.so ${pkgdir}/usr/lib${LIBDIRSUFFIX}/php/modules/pdo_mysql.so
}

pgsql() {
	pkgname="php-pgsql"
	adddep="php"
	shortdesc='PostgreSQL modules for PHP'
}

pgsql_prep() {
	install -D -m755 ${srcdir}/build-php/modules/pgsql.so ${pkgdir}/usr/lib${LIBDIRSUFFIX}/php/modules/pgsql.so
	install -D -m755 ${srcdir}/build-php/modules/pdo_pgsql.so ${pkgdir}/usr/lib${LIBDIRSUFFIX}/php/modules/pdo_pgsql.so
}

pspell() {
	pkgname="php-pspell"
	adddep="php"
	shortdesc='pspell module for PHP'
}

pspell_prep() {
	install -D -m755 ${srcdir}/build-php/modules/pspell.so ${pkgdir}/usr/lib${LIBDIRSUFFIX}/php/modules/pspell.so
}

snmp() {
	pkgname="php-snmp"
	adddeps="php"
	shortdesc='snmp module for PHP'
}

snmp_prep() {
	install -D -m755 ${srcdir}/build-php/modules/snmp.so ${pkgdir}/usr/lib${LIBDIRSUFFIX}/php/modules/snmp.so
}

sqlite() {
	pkgname="php-sqlite"
	adddeps="php"
	shortdesc='sqlite module for PHP'
}

sqlite_prep() {
	install -D -m755 ${srcdir}/build-php/modules/sqlite3.so ${pkgdir}/usr/lib${LIBDIRSUFFIX}/php/modules/sqlite3.so
	install -D -m755 ${srcdir}/build-php/modules/pdo_sqlite.so ${pkgdir}/usr/lib${LIBDIRSUFFIX}/php/modules/pdo_sqlite.so
}

xsl() {
	pkgname="php-xsl"
	adddeps="php"
	shortdesc='xsl module for PHP'
}

xsl_prep() {
	install -D -m755 ${srcdir}/build-php/modules/xsl.so ${pkgdir}/usr/lib${LIBDIRSUFFIX}/php/modules/xsl.so
}
