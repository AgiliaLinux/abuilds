# ABUILD generated by mkpkg_generator.sh

pkgname=nfs-utils
pkgver=1.2.8
pkgbuild=1
arch=("auto")

shortdesc=("nfs-utils (Network File System daemons and utilities)")
longdesc=("The nfs-utils package contains the necessary daemons and utilities to run an NFS server on Linux. You'll also need the portmap package to use NFS.")

tags=("net-fs network")
build_deps="glibc e2fsprogs rpcbind libevent attr libcap device-mapper util-linux-ng sqlite pkg-config autoconf automake"

source=("http://downloads.sourceforge.net/project/nfs/${pkgname}/${pkgver}/${pkgname}-${pkgver}.tar.bz2")

BUILD_SYSTEM="autotools"
BUILD_KEYS="--prefix=/usr \
  --mandir=/usr/man \
  --with-statedir=/var/lib/nfs \
  --enable-nfsv3 \
  --enable-nfsv4 \
  --enable-gss=no \
  --enable-tirpc=no \
  --program-prefix= \
  --program-suffix="
INSTALL_KEYS="DESTDIR=$pkgdir"

after_build() {
	set -e
	# These might be in use:
	( cd ${pkgdir}/var/lib/nfs
		for i in etab rmtab state xtab ; do
			mv $i ${i}.new
		done
	)

	# No NFSv4 yet, so remove these:
	rm -f ${pkgdir}/sbin/*nfs4

	mkdir -p ${pkgdir}/sbin
	mv ${pkgdir}/usr/sbin/rpc.statd ${pkgdir}/sbin
	( cd ${pkgdir}/usr/sbin ; ln -sf ../../sbin/rpc.statd . )

	mkdir -p ${pkgdir}/install
	cat << EOF > ${pkgdir}/install/doinst.sh
#!/bin/sh
config() {
  NEW="\$1"
  OLD="\$(dirname \$NEW)/\$(basename \$NEW .new)"
  # If there's no config file by that name, mv it over:
  if [ ! -r \$OLD ]; then
    mv \$NEW \$OLD
  elif [ "\$(cat \$OLD | md5sum)" = "\$(cat \$NEW | md5sum)" ]; then # toss the redundant copy
    rm \$NEW
  fi
  # Otherwise, we leave the .new copy for the admin to consider...
}
EOF

	( cd ${pkgdir}/var/lib/nfs
		for config_file in etab.new rmtab.new state.new xtab.new ; do
			if [ -r ${config_file} ]; then
				echo "config var/lib/nfs/${config_file}" >> ${pkgdir}/install/doinst.sh
			fi
		done
	)

	# If these aren't moved into place, they're junk:
	echo "rm -f var/lib/nfs/*.new" >> ${pkgdir}/install/doinst.sh

	cat << EOF >> ${pkgdir}/install/doinst.sh
config etc/conf.d/nfs.new
config etc/exports.new
EOF
	# install OpenRC init
	install -D -m0755 ${filedir}/nfs.init ${pkgdir}/etc/init.d/nfs
	install -D -m0644 ${filedir}/nfs.conf.d ${pkgdir}/etc/conf.d/nfs.new

	for i in nfsmount rpc.gssd rpc.idmapd rpc.pipefs rpc.statd rpc.svcgssd ; do
		install -D -m0755 ${filedir}/$i ${pkgdir}/etc/init.d/$i
	done
	
	
	# Other stuff
	install -D -m0644 ${filedir}/exports.new ${pkgdir}/etc/exports.new
	install -d ${pkgdir}/var/log/nfsd

	set +e

}

